function BattleSquare.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push constant 0
push constant 0
push constant 10
call Square.new 3
pop this 0
push constant 0
pop this 1
push constant 500
push constant 0
push constant 10
call Square.new 3
pop this 2
push constant 0
pop this 3
push constant 0
pop this 8
push constant 0
pop this 9
push pointer 0
call BattleSquare.showScore 1
pop temp 0
push constant 13
call Random.new 1
pop this 7
push pointer 0
call BattleSquare.drawTheBall 1
pop temp 0
push pointer 0
return
function BattleSquare.drawTheBall 0
push argument 0
pop pointer 0
push this 7
push constant 500
call Random.randRange 2
push constant 2
add
pop this 5
push this 7
push constant 240
call Random.randRange 2
push constant 2
add
pop this 6
push constant 2
pop this 10
push this 5
push this 6
push this 10
call Square.new 3
pop temp 0
push constant 0
return
function BattleSquare.eraseTheBall 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 5
push this 6
push this 10
call Square.new 3
pop temp 0
push constant 0
return
function BattleSquare.dispose 0
push argument 0
pop pointer 0
push this 0
call Square.dispose 1
pop temp 0
push this 2
call Square.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BattleSquare.colision 8
push argument 0
pop pointer 0
push this 5
pop local 0
push this 6
pop local 1
push this 5
push this 10
add
pop local 2
push this 6
push this 10
add
pop local 3
push this 0
call Square.getX 1
pop local 4
push this 0
call Square.getY 1
pop local 5
push this 0
call Square.getX 1
push this 0
call Square.getSize 1
add
pop local 6
push this 0
call Square.getY 1
push this 0
call Square.getSize 1
add
pop local 7
push local 4
push local 0
lt
push local 0
push local 6
lt
and
push local 5
push local 1
lt
push local 1
push local 7
lt
and
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function BattleSquare.colision2 8
push argument 0
pop pointer 0
push this 5
pop local 0
push this 6
pop local 1
push this 5
push this 10
add
pop local 2
push this 6
push this 10
add
pop local 3
push this 2
call Square.getX 1
pop local 4
push this 2
call Square.getY 1
pop local 5
push this 2
call Square.getX 1
push this 2
call Square.getSize 1
add
pop local 6
push this 2
call Square.getY 1
push this 2
call Square.getSize 1
add
pop local 7
push local 4
push local 0
lt
push local 0
push local 6
lt
and
push local 5
push local 1
lt
push local 1
push local 7
lt
and
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function BattleSquare.score 0
push argument 0
pop pointer 0
push pointer 0
call BattleSquare.eraseTheBall 1
pop temp 0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 8
push constant 1
add
pop this 8
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 9
push constant 1
add
pop this 9
label IF_FALSE1
push this 8
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 1
call BattleSquare.gameOver 2
pop temp 0
label IF_FALSE2
push this 9
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push constant 2
call BattleSquare.gameOver 2
pop temp 0
label IF_FALSE3
push pointer 0
call BattleSquare.showScore 1
pop temp 0
push pointer 0
call BattleSquare.drawTheBall 1
pop temp 0
push constant 0
return
function BattleSquare.moveSquare1 0
push argument 0
pop pointer 0
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Square.moveUp 1
pop temp 0
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Square.moveDown 1
pop temp 0
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Square.moveLeft 1
pop temp 0
label IF_FALSE2
push this 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Square.moveRight 1
pop temp 0
label IF_FALSE3
push pointer 0
call BattleSquare.colision 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push constant 1
call BattleSquare.score 2
pop temp 0
label IF_FALSE4
push constant 6
call Sys.wait 1
pop temp 0
push constant 0
return
function BattleSquare.moveSquare2 0
push argument 0
pop pointer 0
push this 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Square.moveUp 1
pop temp 0
label IF_FALSE0
push this 3
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
call Square.moveDown 1
pop temp 0
label IF_FALSE1
push this 3
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
call Square.moveLeft 1
pop temp 0
label IF_FALSE2
push this 3
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
call Square.moveRight 1
pop temp 0
label IF_FALSE3
push pointer 0
call BattleSquare.colision2 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push constant 2
call BattleSquare.score 2
pop temp 0
label IF_FALSE4
push constant 6
call Sys.wait 1
pop temp 0
push constant 0
return
function BattleSquare.run 1
push argument 0
pop pointer 0
push constant 0
pop this 11
label WHILE_EXP0
push this 11
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call BattleSquare.moveSquare1 1
pop temp 0
push pointer 0
call BattleSquare.moveSquare2 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 11
label IF_FALSE0
push local 0
push constant 131
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop this 3
label IF_FALSE1
push local 0
push constant 133
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
pop this 3
label IF_FALSE2
push local 0
push constant 130
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
pop this 3
label IF_FALSE3
push local 0
push constant 132
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 4
pop this 3
label IF_FALSE4
push local 0
push constant 87
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 1
pop this 1
label IF_FALSE5
push local 0
push constant 83
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
pop this 1
label IF_FALSE6
push local 0
push constant 65
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 3
pop this 1
label IF_FALSE7
push local 0
push constant 68
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 4
pop this 1
label IF_FALSE8
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call BattleSquare.moveSquare1 1
pop temp 0
push pointer 0
call BattleSquare.moveSquare2 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BattleSquare.gameOver 0
push argument 0
pop pointer 0
push pointer 0
call BattleSquare.showScore 1
pop temp 0
push constant 0
not
pop this 11
push constant 0
return
function BattleSquare.showScore 0
push argument 0
pop pointer 0
push pointer 0
call BattleSquare.eraseScore 1
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 8
call Output.printInt 1
pop temp 0
push constant 3
call String.new 1
push constant 32
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 9
call Output.printInt 1
pop temp 0
push constant 0
return
function BattleSquare.eraseScore 0
push argument 0
pop pointer 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
call Output.backSpace 0
pop temp 0
push constant 0
return
